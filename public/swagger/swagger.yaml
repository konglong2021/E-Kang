swagger: '2.0'
info:
  description: POS APis Documentation
  version: 1.0.0
  title: E Kang POS Frontend API's
basePath: /api/


paths:
  /login:
    post:
      tags:
        - Generate Token
      summary: Generate Token
      description: 'Generate Token'
      operationId: token
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Generate Token
          required: true
          schema:
            $ref: '#/definitions/Token'  
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request

  /category:
    get:
      tags:
        - Category
      summary: Manage Category
      description: 'Manage Category with this API'
      operationId: category
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
      security: 
        - api_key: []
    post:
      tags:
        - Category
      summary: Create Category
      description: 'Create Category with this API'
      operationId: createCategory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Category Of Productions
          required: true
          schema:
            $ref: '#/definitions/Category' 
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
      security:
        - api_key: [] 
  /category/{categoryId}:      
    put:
      tags:
        - Category
      summary: Update Category
      description: 'Update Category with this API'
      operationId: updateCategory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - name: categoryId
        in: path
        description: ID of Category that needs to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Category Of Productions
        required: true
        schema:
         $ref: '#/definitions/Category'
      responses:
        '405':
          description: Invalid input     
        '200':
          description: successful operation
        '400':
          description: Bad request
      security:
        - api_key: []     
    delete:
          tags:
            - Category
          summary: Delete Category
          description: 'Delete Category with this API'
          operationId: deleteCategory
          consumes:
            - application/json
          produces:
            - application/json
          parameters:
          - name: categoryId
            in: path
            description: ID of Category that needs to be Delete
            required: true
            type: integer
            format: int64
          responses:
            '405':
              description: Invalid input     
            '400':
              description: Bad request
          security:
            - api_key: []
  /category/search:      
    post:
      tags:
        - Category
      summary: Search Category
      description: 'Search Category with this API'
      operationId: searchCategory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - name: search
        in: query
        description: Something in Category
        required: true
        type: string
      responses:
        '405':
          description: Invalid input     
        '200':
          description: successful operation
        '400':
          description: Bad request
      security:
        - api_key: []                       
  /brand:
    get:
      tags:
        - Brand
      summary: Manage Brand
      description: 'Manage Brand with this API'
      operationId: brand
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
      security: 
        - api_key: []
    post:
      tags:
        - Brand
      summary: Create Brand
      description: 'Create Brand with this API'
      operationId: createBrand
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Brand Of Productions
          required: true
          schema:
            $ref: '#/definitions/Brand'
     
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad request
      security:
        - api_key: [] 
  /brand/{brandId}:      
    put:
      tags:
        - Brand
      summary: Update Brand
      description: 'Update Brand with this API'
      operationId: updateBrand
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - name: brandId
        in: path
        description: ID of Brand that needs to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Brand Of Productions
        required: true
        schema:
         $ref: '#/definitions/Brand'
      responses:
        '405':
          description: Invalid input     
        '200':
          description: successful operation
        '400':
          description: Bad request
      security:
        - api_key: []     
    delete:
          tags:
            - Brand
          summary: Delete CatBrand
          description: 'Delete Brand with this API'
          operationId: deleteBrand
          consumes:
            - application/json
          produces:
            - application/json
          parameters:
          - name: brandId
            in: path
            description: ID of Brand that needs to be Delete
            required: true
            type: integer
            format: int64
          responses:
            '405':
              description: Invalid input     
            '400':
              description: Bad request
          security:
            - api_key: []
  /brand/search:      
    post:
      tags:
        - Brand
      summary: Search Brand
      description: 'Search Brand with this API'
      operationId: searchBrand
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - name: search
        in: query
        description: Something in Brand
        required: true
        type: string
      responses:
        '405':
          description: Invalid input     
        '200':
          description: successful operation
        '400':
          description: Bad request
      security:
        - api_key: []                      

securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization
    in: header    

definitions:
 Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      xml:
        name: Tag    
 Category:
    type: object
    properties:
      name:
        type: string
        description: English Name
      kh_name:
        type: string
        description: Khmer Name
      description:
        type: string
        description: description of category
      brands:
        type: array
        items:
         type: integer 
        example: [1,2,3]  
    xml:
      name: Category
 Brand:
    type: object
    properties:
      name:
        type: string
        description: English Name
      kh_name:
        type: string
        description: Khmer Name
      description:
        type: string
        description: description of category
      categories:
        type: array
        items:
         type: integer 
        example: [1,2,3]  
    xml:
      name: Brand   
 Token:
    type: object
    properties:
      email:
        type: string
        example: admin@admin.com
      password:
        type: string
        example: password 
    xml:
      name: Token     